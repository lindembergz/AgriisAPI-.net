@import '../../../../styles/variables';
@import '../../../../styles/mixins';

// Component-specific variables following design system
$tree-indent-size: 1.5rem;
$tree-node-height: 3rem;
$tree-icon-size: 1rem;
$status-indicator-size: 0.5rem;
$mobile-breakpoint: 767px;
$tablet-breakpoint: 1024px;

.categorias-container {
  @include padding(1rem);
  min-height: 100vh;
  background: var(--surface-ground);
  
  // Mobile-first responsive design
  @include mobile {
    @include padding(0.75rem);
  }
  
  .header-section {
    @include flex-between;
    @include margin(0, 0, 1.5rem, 0);
    gap: 1rem;
    
    // Mobile-first responsive design
    @include mobile {
      @include flex-column;
      align-items: stretch;
      gap: 1rem;
    }
    
    .title-section {
      flex: 1;
      
      h2 {
        @include margin(0, 0, 0.5rem, 0);
        color: var(--text-color);
        font-size: 1.75rem;
        font-weight: 600;
        line-height: 1.2;
        
        @include mobile {
          font-size: 1.5rem;
        }
      }
      
      .subtitle {
        @include margin(0);
        color: var(--text-color-secondary);
        font-size: 0.95rem;
        line-height: 1.4;
        
        @include mobile {
          font-size: 0.875rem;
        }
      }
    }
    
    .actions-section {
      @include flex-center;
      gap: 0.75rem;
      flex-shrink: 0;
      
      @include mobile {
        @include flex-column;
        align-items: stretch;
        gap: 0.5rem;
      }
      
      .status-filter {
        min-width: 150px;
        
        @include mobile {
          min-width: auto;
        }
      }
      
      .new-item-btn {
        white-space: nowrap;
        
        @include mobile {
          width: 100%;
          justify-content: center;
        }
      }
    }
  }
  
  .filters-section {
    background: var(--surface-card);
    border: 1px solid var(--surface-border);
    border-radius: var(--border-radius);
    padding: 1rem;
    margin-bottom: 1.5rem;
    
    .filters-row {
      display: grid;
      grid-template-columns: 2fr 1fr 1fr auto;
      gap: 1rem;
      align-items: end;
      
      .filter-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
        
        .filter-label {
          font-weight: 500;
          color: var(--text-color);
          font-size: 0.875rem;
        }
        
        &.search-filter {
          .search-input {
            width: 100%;
          }
          
          :host ::ng-deep {
            .p-input-icon-left {
              width: 100%;
              
              .pi-search {
                color: var(--text-color-secondary);
              }
              
              input {
                padding-left: 2.5rem;
              }
            }
          }
        }
        
        &.clear-filter {
          align-self: end;
        }
      }
    }
    
    .active-filters-summary {
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid var(--surface-border);
      display: flex;
      align-items: center;
      gap: 0.75rem;
      flex-wrap: wrap;
      
      .summary-label {
        font-weight: 500;
        color: var(--text-color-secondary);
        font-size: 0.875rem;
      }
      
      .filter-tag {
        font-size: 0.75rem;
        
        :host ::ng-deep {
          .p-tag {
            background: var(--blue-100);
            color: var(--blue-800);
            border: 1px solid var(--blue-200);
          }
        }
      }
    }
  }
  
  .loading-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 3rem;
    gap: 1rem;
    
    p {
      color: var(--text-color-secondary);
      margin: 0;
    }
  }
  
  .tree-container {
    @include card;
    @include shadow;
    border: 1px solid var(--surface-border);
    overflow: hidden;
    
    // TreeTable specific styles with design system patterns
    :host ::ng-deep {
      .p-treetable {
        .p-treetable-table {
          border-collapse: separate;
          border-spacing: 0;
          width: 100%;
        }
        
        .p-treetable-thead > tr > th {
          background: var(--surface-section);
          color: var(--text-color);
          font-weight: 600;
          @include padding(0.75rem);
          border-bottom: 1px solid var(--surface-border);
          font-size: 0.875rem;
          text-transform: uppercase;
          letter-spacing: 0.025em;
          
          @include mobile {
            @include padding(0.5rem);
            font-size: 0.75rem;
          }
          
          &:first-child {
            border-top-left-radius: var(--border-radius);
          }
          
          &:last-child {
            border-top-right-radius: var(--border-radius);
          }
          
          &.hide-on-mobile {
            @include mobile {
              display: none;
            }
          }
          
          &.hide-on-tablet {
            @include tablet {
              display: none;
            }
          }
        }
        
        .p-treetable-tbody > tr {
          transition: all 0.2s ease;
          min-height: $tree-node-height;
          
          &:hover {
            background: var(--surface-hover);
            transform: translateY(-1px);
            @include shadow-sm;
          }
          
          &.inactive-row {
            opacity: 0.6;
            color: var(--text-color-secondary);
            background: var(--surface-100);
            
            .categoria-nome {
              text-decoration: line-through;
              color: var(--text-color-secondary);
            }
            
            // Visual indicator for inactive status
            &::before {
              content: '';
              position: absolute;
              left: 0;
              top: 0;
              bottom: 0;
              width: 4px;
              background: var(--red-500);
              opacity: 0.7;
            }
          }
          
          // Active category visual indicator
          &:not(.inactive-row)::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background: var(--green-500);
            opacity: 0.8;
          }
          
          > td {
            @include padding(0.75rem);
            border-bottom: 1px solid var(--surface-border);
            vertical-align: middle;
            position: relative;
            
            @include mobile {
              @include padding(0.5rem);
            }
            
            &.hide-on-mobile {
              @include mobile {
                display: none;
              }
            }
            
            &.hide-on-tablet {
              @include tablet {
                display: none;
              }
            }
            
            // Tree hierarchy indentation with visual guides
            &:first-child {
              position: relative;
              
              .p-treetable-toggler {
                @include margin(0, 0.5rem, 0, 0);
                color: var(--primary-color);
                width: $tree-icon-size;
                height: $tree-icon-size;
                border-radius: 50%;
                transition: all 0.2s ease;
                
                &:hover {
                  color: var(--primary-color-text);
                  background: var(--primary-color);
                  transform: scale(1.1);
                }
                
                &:focus {
                  outline: 2px solid var(--primary-color);
                  outline-offset: 2px;
                }
              }
            }
          }
        }
        
        // Tree hierarchy visual styling
        .p-treetable-node-content {
          position: relative;
          
          // Hierarchy level indicators
          &[data-level="1"] {
            padding-left: $tree-indent-size;
            
            &::before {
              content: '';
              position: absolute;
              left: calc(#{$tree-indent-size} / 2);
              top: 0;
              bottom: 0;
              width: 2px;
              background: var(--surface-300);
            }
          }
          
          &[data-level="2"] {
            padding-left: calc(#{$tree-indent-size} * 2);
            
            &::before {
              content: '';
              position: absolute;
              left: calc(#{$tree-indent-size} * 1.5);
              top: 0;
              bottom: 0;
              width: 2px;
              background: var(--surface-300);
            }
          }
          
          &[data-level="3"] {
            padding-left: calc(#{$tree-indent-size} * 3);
            
            &::before {
              content: '';
              position: absolute;
              left: calc(#{$tree-indent-size} * 2.5);
              top: 0;
              bottom: 0;
              width: 2px;
              background: var(--surface-300);
            }
          }
        }
        
        .categoria-nome {
          font-weight: 600;
          color: var(--text-color);
          font-size: 0.95rem;
          @include line-clamp(2);
          
          @include mobile {
            font-size: 0.875rem;
          }
        }
        
        .tipo-badge {
          color: var(--primary-color);
          font-weight: 500;
          font-size: 0.875rem;
          background: var(--primary-50);
          @include padding(0.25rem, 0.5rem);
          border-radius: var(--border-radius);
          
          @include mobile {
            font-size: 0.75rem;
            @include padding(0.125rem, 0.375rem);
          }
        }
        
        .ordem-value {
          color: var(--text-color-secondary);
          font-size: 0.875rem;
          font-weight: 500;
          
          @include mobile {
            font-size: 0.75rem;
          }
        }
        
        // Status indicators with clear visual differentiation
        .status-indicator {
          display: inline-flex;
          align-items: center;
          gap: 0.375rem;
          
          &::before {
            content: '';
            width: $status-indicator-size;
            height: $status-indicator-size;
            border-radius: 50%;
            background: var(--green-500);
          }
          
          &.inactive::before {
            background: var(--red-500);
          }
          
          .status-text {
            font-size: 0.875rem;
            font-weight: 500;
            
            @include mobile {
              display: none; // Show only indicator on mobile
            }
          }
        }
        
        .action-buttons {
          @include flex-center;
          gap: 0.25rem;
          justify-content: flex-end;
          
          @include mobile {
            @include flex-column;
            gap: 0.125rem;
          }
          
          .p-button {
            &.p-button-sm {
              width: 2rem;
              height: 2rem;
              transition: all 0.2s ease;
              
              @include mobile {
                width: 1.75rem;
                height: 1.75rem;
              }
              
              &:hover {
                transform: scale(1.05);
              }
              
              &:focus {
                outline: 2px solid var(--primary-color);
                outline-offset: 2px;
              }
              
              .pi {
                font-size: 0.875rem;
                
                @include mobile {
                  font-size: 0.75rem;
                }
              }
            }
          }
        }
        
        .empty-message {
          @include flex-center;
          gap: 0.5rem;
          @include padding(2rem);
          color: var(--text-color-secondary);
          
          .pi {
            font-size: 1.25rem;
          }
        }
      }
    }
    
    .empty-state {
      text-align: center;
      padding: 3rem 1rem;
      
      .empty-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
        
        .empty-icon {
          font-size: 3rem;
          color: var(--text-color-secondary);
          opacity: 0.6;
        }
        
        h3 {
          margin: 0;
          color: var(--text-color);
          font-size: 1.25rem;
          font-weight: 500;
        }
        
        p {
          margin: 0;
          color: var(--text-color-secondary);
          max-width: 400px;
          line-height: 1.5;
        }
      }
    }
  }
  
  .form-container {
    display: flex;
    flex-direction: column;
    gap: 1.25rem;
    
    .field {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      
      label {
        font-weight: 500;
        color: var(--text-color);
        font-size: 0.95rem;
        
        &.required::after {
          content: ' *';
          color: var(--red-500);
          font-weight: bold;
        }
      }
      
      .field-help {
        color: var(--text-color-secondary);
        font-size: 0.875rem;
        line-height: 1.4;
        margin-top: 0.25rem;
      }
      
      .field-checkbox {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: 0.25rem;
      }
      
      // Input styling
      input, textarea {
        width: 100%;
        transition: border-color 0.2s ease;
        
        &:focus {
          outline: none;
          border-color: var(--primary-color);
          box-shadow: 0 0 0 0.2rem rgba(var(--primary-color-rgb), 0.2);
        }
        
        &.ng-invalid.ng-touched,
        &.p-invalid {
          border-color: var(--red-500);
          
          &:focus {
            border-color: var(--red-500);
            box-shadow: 0 0 0 0.2rem rgba(var(--red-500-rgb), 0.2);
          }
        }
        
        &.ng-valid.ng-dirty {
          border-color: var(--green-500);
        }
        
        &.ng-pending {
          border-color: var(--orange-500);
          position: relative;
          
          &::after {
            content: '';
            position: absolute;
            right: 0.75rem;
            top: 50%;
            transform: translateY(-50%);
            width: 1rem;
            height: 1rem;
            border: 2px solid var(--orange-500);
            border-top: 2px solid transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
          }
        }
      }
      
      input[type="number"] {
        max-width: 200px;
      }
      
      // PrimeNG component styling
      :host ::ng-deep {
        .p-select,
        .p-checkbox {
          width: 100%;
          
          &.p-invalid {
            .p-select-label,
            .p-inputtext {
              border-color: var(--red-500);
            }
          }
          
          &.p-valid {
            .p-select-label,
            .p-inputtext {
              border-color: var(--green-500);
            }
          }
          
          &.p-pending {
            .p-select-label,
            .p-inputtext {
              border-color: var(--orange-500);
            }
          }
        }
        
        .p-select {
          .p-select-label {
            transition: border-color 0.2s ease;
          }
          
          &:not(.p-disabled):hover .p-select-label {
            border-color: var(--primary-color);
          }
          
          &.p-focus .p-select-label {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 0.2rem rgba(var(--primary-color-rgb), 0.2);
          }
        }
        
        .p-checkbox {
          .p-checkbox-box {
            transition: all 0.2s ease;
          }
          
          &:not(.p-disabled):hover .p-checkbox-box {
            border-color: var(--primary-color);
          }
        }
      }
    }
    
    // Error message styling
    app-field-error {
      margin-top: 0.25rem;
      
      :host ::ng-deep {
        .field-error {
          color: var(--red-500);
          font-size: 0.875rem;
          display: flex;
          align-items: center;
          gap: 0.375rem;
          
          .pi {
            font-size: 0.75rem;
          }
        }
      }
    }
  }
  
  .dialog-footer {
    display: flex;
    gap: 0.75rem;
    justify-content: flex-end;
    padding-top: 1rem;
  }
}

// Mobile-first responsive design with design system breakpoints
@include mobile {
  .categorias-container {
    .filters-section {
      .filters-row {
        grid-template-columns: 1fr;
        gap: 1rem;
        
        .filter-item {
          &.clear-filter {
            align-self: stretch;
            
            .p-button {
              width: 100%;
              justify-content: center;
            }
          }
        }
      }
      
      .active-filters-summary {
        .filter-tag {
          font-size: 0.7rem;
        }
      }
    }
    
    // Enhanced mobile tree styling
    .tree-container {
      border-radius: 0.5rem;
      
      :host ::ng-deep {
        .p-treetable {
          .p-treetable-tbody > tr {
            // Improved touch targets for mobile
            min-height: 3.5rem;
            
            > td {
              &:first-child {
                // Better hierarchy visualization on mobile
                .p-treetable-toggler {
                  width: 1.25rem;
                  height: 1.25rem;
                  touch-action: manipulation;
                }
              }
            }
          }
          
          .categoria-nome {
            font-size: 0.95rem;
            line-height: 1.3;
          }
          
          // Simplified mobile layout
          .tipo-badge {
            display: inline-block;
            @include margin(0.25rem, 0, 0, 0);
          }
        }
      }
    }
    
    // Mobile dialog optimization
    :host ::ng-deep {
      .p-dialog {
        width: 95vw !important;
        max-width: 95vw !important;
        @include margin(1rem);
        border-radius: 0.75rem;
        
        .p-dialog-header {
          @include padding(1rem);
          border-bottom: 1px solid var(--surface-border);
        }
        
        .p-dialog-content {
          @include padding(1rem);
          max-height: 70vh;
          overflow-y: auto;
        }
        
        .p-dialog-footer {
          @include padding(1rem);
          border-top: 1px solid var(--surface-border);
          
          .p-button {
            flex: 1;
            justify-content: center;
          }
        }
      }
    }
  }
}

// Tablet-specific optimizations
@include tablet {
  .categorias-container {
    .filters-section {
      .filters-row {
        grid-template-columns: 2fr 1fr 1fr auto;
        gap: 0.75rem;
      }
    }
    
    .tree-container {
      :host ::ng-deep {
        .p-treetable {
          .p-treetable-tbody > tr {
            min-height: 3rem;
          }
        }
      }
    }
  }
}

// Desktop enhancements
@include desktop {
  .categorias-container {
    .tree-container {
      :host ::ng-deep {
        .p-treetable {
          .p-treetable-tbody > tr {
            &:hover {
              .action-buttons {
                .p-button {
                  opacity: 1;
                  transform: scale(1.05);
                }
              }
            }
          }
          
          .action-buttons {
            .p-button {
              opacity: 0.7;
              transition: all 0.2s ease;
              
              &:hover {
                opacity: 1;
                transform: scale(1.1);
              }
            }
          }
        }
      }
    }
  }
}

// Large desktop optimizations
@include large-desktop {
  .categorias-container {
    max-width: 1400px;
    margin: 0 auto;
    
    .tree-container {
      :host ::ng-deep {
        .p-treetable {
          .categoria-nome {
            font-size: 1rem;
          }
          
          .tipo-badge {
            font-size: 0.9rem;
          }
        }
      }
    }
  }
}

// Enhanced status styling with design system patterns
:host ::ng-deep {
  .p-tag {
    font-weight: 500;
    font-size: 0.75rem;
    @include padding(0.25rem, 0.5rem);
    border-radius: 1rem;
    text-transform: uppercase;
    letter-spacing: 0.025em;
    
    &.p-tag-success {
      background: var(--green-100);
      color: var(--green-800);
      border: 1px solid var(--green-200);
    }
    
    &.p-tag-danger {
      background: var(--red-100);
      color: var(--red-800);
      border: 1px solid var(--red-200);
    }
    
    &.p-tag-info {
      background: var(--blue-100);
      color: var(--blue-800);
      border: 1px solid var(--blue-200);
    }
    
    &.p-tag-warning {
      background: var(--orange-100);
      color: var(--orange-800);
      border: 1px solid var(--orange-200);
    }
  }
}

// Loading states
.p-button[loading] {
  pointer-events: none;
}

// Action buttons styling
.categoria-actions {
  .p-button {
    &.p-button-rounded {
      width: 2.5rem;
      height: 2.5rem;
    }
  }
}

// Accessibility enhancements
.categorias-container {
  // Focus management
  &:focus-within {
    .tree-container {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }
  }
  
  // High contrast mode support
  @media (prefers-contrast: high) {
    .tree-container {
      border: 2px solid var(--text-color);
      
      :host ::ng-deep {
        .p-treetable {
          .p-treetable-tbody > tr {
            &.inactive-row {
              background: repeating-linear-gradient(
                45deg,
                transparent,
                transparent 2px,
                var(--surface-200) 2px,
                var(--surface-200) 4px
              );
            }
          }
        }
      }
    }
  }
  
  // Reduced motion support
  @media (prefers-reduced-motion: reduce) {
    * {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
  
  // Screen reader only content
  .sr-only {
    @include visually-hidden;
  }
  
  // Skip link for keyboard navigation
  .skip-link {
    position: absolute;
    top: -40px;
    left: 6px;
    background: var(--primary-color);
    color: var(--primary-color-text);
    @include padding(0.5rem, 1rem);
    text-decoration: none;
    border-radius: var(--border-radius);
    z-index: 1000;
    
    &:focus {
      top: 6px;
    }
  }
}

// Keyboard navigation enhancements
:host ::ng-deep {
  .p-treetable {
    // Focus indicators for keyboard navigation
    .p-treetable-tbody > tr {
      &:focus {
        outline: 2px solid var(--primary-color);
        outline-offset: -2px;
        background: var(--primary-50);
      }
      
      &:focus-visible {
        outline: 2px solid var(--primary-color);
        outline-offset: -2px;
      }
    }
    
    .p-treetable-toggler {
      &:focus {
        outline: 2px solid var(--primary-color);
        outline-offset: 2px;
        border-radius: 50%;
      }
    }
    
    // ARIA live region for screen readers
    .aria-live-region {
      @include visually-hidden;
    }
  }
  
  // Button focus enhancements
  .p-button {
    &:focus {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }
    
    &:focus:not(:focus-visible) {
      outline: none;
    }
  }
  
  // Form control focus enhancements
  .p-inputtext,
  .p-select,
  .p-textarea {
    &:focus {
      outline: 2px solid var(--primary-color);
      outline-offset: 2px;
    }
  }
}

// Animations with respect for user preferences
@keyframes spin {
  0% { transform: translateY(-50%) rotate(0deg); }
  100% { transform: translateY(-50%) rotate(360deg); }
}

@keyframes pulse {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

@keyframes slideInFromTop {
  0% {
    transform: translateY(-10px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

// Form validation states
:host ::ng-deep {
  .p-invalid {
    .p-inputtext,
    .p-select-label,
    .p-textarea {
      border-color: var(--red-500) !important;
      
      &:focus {
        border-color: var(--red-500) !important;
        box-shadow: 0 0 0 0.2rem rgba(var(--red-500-rgb), 0.2) !important;
      }
    }
  }
  
  .p-valid {
    .p-inputtext,
    .p-select-label,
    .p-textarea {
      border-color: var(--green-500) !important;
    }
  }
  
  .p-pending {
    .p-inputtext,
    .p-select-label,
    .p-textarea {
      border-color: var(--orange-500) !important;
    }
  }
}