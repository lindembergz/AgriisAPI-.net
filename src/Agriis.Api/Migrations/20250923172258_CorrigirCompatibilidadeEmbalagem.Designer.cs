// <auto-generated />
using System;
using System.Text.Json;
using Agriis.Api.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agriis.Api.Migrations
{
    [DbContext(typeof(AgriisDbContext))]
    [Migration("20250923172258_CorrigirCompatibilidadeEmbalagem")]
    partial class CorrigirCompatibilidadeEmbalagem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agriis.Autenticacao.Dominio.Entidades.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_expiracao");

                    b.Property<DateTime?>("DataRevogacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_revogacao");

                    b.Property<string>("EnderecoIp")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("endereco_ip");

                    b.Property<bool>("Revogado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("revogado");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("token");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("user_agent");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_RefreshTokens_DataCriacao");

                    b.HasIndex("DataExpiracao")
                        .HasDatabaseName("ix_refresh_tokens_data_expiracao");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasDatabaseName("ix_refresh_tokens_token");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_refresh_tokens_usuario_id");

                    b.HasIndex("UsuarioId", "Revogado", "DataExpiracao")
                        .HasDatabaseName("ix_refresh_tokens_usuario_valido");

                    b.ToTable("refresh_tokens", "public");
                });

            modelBuilder.Entity("Agriis.Catalogos.Dominio.Entidades.Catalogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoriaId");

                    b.Property<int>("CulturaId")
                        .HasColumnType("integer")
                        .HasColumnName("CulturaId");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataFim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataInicio");

                    b.Property<string>("Moeda")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Moeda");

                    b.Property<int>("PontoDistribuicaoId")
                        .HasColumnType("integer")
                        .HasColumnName("PontoDistribuicaoId");

                    b.Property<int>("SafraId")
                        .HasColumnType("integer")
                        .HasColumnName("SafraId");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("IX_Catalogo_CategoriaId");

                    b.HasIndex("CulturaId")
                        .HasDatabaseName("IX_Catalogo_CulturaId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Catalogos_DataCriacao");

                    b.HasIndex("PontoDistribuicaoId")
                        .HasDatabaseName("IX_Catalogo_PontoDistribuicaoId");

                    b.HasIndex("SafraId")
                        .HasDatabaseName("IX_Catalogo_SafraId");

                    b.HasIndex("DataInicio", "DataFim", "Ativo")
                        .HasDatabaseName("IX_Catalogo_Vigencia");

                    b.HasIndex("SafraId", "PontoDistribuicaoId", "CulturaId", "CategoriaId")
                        .IsUnique()
                        .HasDatabaseName("IX_Catalogo_ChaveUnica");

                    b.ToTable("Catalogo", "public");
                });

            modelBuilder.Entity("Agriis.Catalogos.Dominio.Entidades.CatalogoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<int>("CatalogoId")
                        .HasColumnType("integer")
                        .HasColumnName("CatalogoId");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<JsonDocument>("EstruturaPrecosJson")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("EstruturaPrecosJson");

                    b.Property<decimal?>("PrecoBase")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PrecoBase");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("ProdutoId");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_CatalogoItem_Ativo");

                    b.HasIndex("CatalogoId")
                        .HasDatabaseName("IX_CatalogoItem_CatalogoId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_CatalogoItens_DataCriacao");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("IX_CatalogoItem_ProdutoId");

                    b.HasIndex("CatalogoId", "ProdutoId")
                        .IsUnique()
                        .HasDatabaseName("IX_CatalogoItem_CatalogoProduto");

                    b.ToTable("CatalogoItem", "public");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.Combo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataFim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataInicio");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Descricao");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("FornecedorId");

                    b.Property<decimal>("HectareMaximo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("HectareMaximo");

                    b.Property<decimal>("HectareMinimo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("HectareMinimo");

                    b.Property<int>("ModalidadePagamento")
                        .HasColumnType("integer")
                        .HasColumnName("ModalidadePagamento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome");

                    b.Property<bool>("PermiteAlteracaoItem")
                        .HasColumnType("boolean")
                        .HasColumnName("PermiteAlteracaoItem");

                    b.Property<bool>("PermiteExclusaoItem")
                        .HasColumnType("boolean")
                        .HasColumnName("PermiteExclusaoItem");

                    b.Property<JsonDocument>("RestricoesMunicipios")
                        .HasColumnType("jsonb")
                        .HasColumnName("RestricoesMunicipios");

                    b.Property<int>("SafraId")
                        .HasColumnType("integer")
                        .HasColumnName("SafraId");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Combos_DataCriacao");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("IX_Combo_FornecedorId");

                    b.HasIndex("SafraId")
                        .HasDatabaseName("IX_Combo_SafraId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Combo_Status");

                    b.HasIndex("DataInicio", "DataFim")
                        .HasDatabaseName("IX_Combo_Periodo");

                    b.HasIndex("FornecedorId", "SafraId", "Nome")
                        .IsUnique()
                        .HasDatabaseName("IX_Combo_FornecedorSafraNome");

                    b.ToTable("Combo", "public");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.ComboCategoriaDesconto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Ativo");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer")
                        .HasColumnName("CategoriaId");

                    b.Property<int>("ComboId")
                        .HasColumnType("integer")
                        .HasColumnName("ComboId");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<decimal>("DescontoPorHectare")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("DescontoPorHectare");

                    b.Property<decimal>("HectareMaximo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("HectareMaximo");

                    b.Property<decimal>("HectareMinimo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("HectareMinimo");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PercentualDesconto");

                    b.Property<int>("TipoDesconto")
                        .HasColumnType("integer")
                        .HasColumnName("TipoDesconto");

                    b.Property<decimal>("ValorDescontoFixo")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorDescontoFixo");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_ComboCategoriaDesconto_Ativo");

                    b.HasIndex("CategoriaId")
                        .HasDatabaseName("IX_ComboCategoriaDesconto_CategoriaId");

                    b.HasIndex("ComboId")
                        .HasDatabaseName("IX_ComboCategoriaDesconto_ComboId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_ComboCategoriasDesconto_DataCriacao");

                    b.HasIndex("ComboId", "CategoriaId")
                        .IsUnique()
                        .HasDatabaseName("IX_ComboCategoriaDesconto_ComboCategoria");

                    b.ToTable("ComboCategoriaDesconto", "public");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.ComboItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComboId")
                        .HasColumnType("integer")
                        .HasColumnName("ComboId");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer")
                        .HasColumnName("Ordem");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PercentualDesconto");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("PrecoUnitario");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("ProdutoId");

                    b.Property<bool>("ProdutoObrigatorio")
                        .HasColumnType("boolean")
                        .HasColumnName("ProdutoObrigatorio");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("ComboId")
                        .HasDatabaseName("IX_ComboItem_ComboId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_ComboItens_DataCriacao");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("IX_ComboItem_ProdutoId");

                    b.HasIndex("ComboId", "Ordem")
                        .HasDatabaseName("IX_ComboItem_ComboOrdem");

                    b.ToTable("ComboItem", "public");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.ComboLocalRecebimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ComboId")
                        .HasColumnType("integer")
                        .HasColumnName("ComboId");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("LocalPadrao")
                        .HasColumnType("boolean")
                        .HasColumnName("LocalPadrao");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Observacoes");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PercentualDesconto");

                    b.Property<int>("PontoDistribuicaoId")
                        .HasColumnType("integer")
                        .HasColumnName("PontoDistribuicaoId");

                    b.Property<decimal>("PrecoAdicional")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("PrecoAdicional");

                    b.HasKey("Id");

                    b.HasIndex("ComboId")
                        .HasDatabaseName("IX_ComboLocalRecebimento_ComboId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_ComboLocaisRecebimento_DataCriacao");

                    b.HasIndex("PontoDistribuicaoId")
                        .HasDatabaseName("IX_ComboLocalRecebimento_PontoDistribuicaoId");

                    b.HasIndex("ComboId", "PontoDistribuicaoId")
                        .IsUnique()
                        .HasDatabaseName("IX_ComboLocalRecebimento_ComboPonto");

                    b.ToTable("ComboLocalRecebimento", "public");
                });

            modelBuilder.Entity("Agriis.Culturas.Dominio.Entidades.Cultura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Descricao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_Cultura_Ativo");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Culturas_DataCriacao");

                    b.HasIndex("Nome")
                        .IsUnique()
                        .HasDatabaseName("IX_Cultura_Nome");

                    b.ToTable("Cultura", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("complemento");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.Property<double?>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("logradouro");

                    b.Property<double?>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("integer")
                        .HasColumnName("municipio_id");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("Bairro")
                        .HasDatabaseName("IX_enderecos_bairro");

                    b.HasIndex("Cep")
                        .HasDatabaseName("IX_enderecos_cep");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Enderecos_DataCriacao");

                    b.HasIndex("EstadoId")
                        .HasDatabaseName("IX_enderecos_estado_id");

                    b.HasIndex("Logradouro")
                        .HasDatabaseName("IX_enderecos_logradouro");

                    b.HasIndex("MunicipioId")
                        .HasDatabaseName("IX_enderecos_municipio_id");

                    b.HasIndex("Cep", "Logradouro", "Numero", "MunicipioId")
                        .HasDatabaseName("IX_enderecos_unique_address");

                    b.ToTable("enderecos", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoIbge")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("regiao");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.HasIndex("CodigoIbge")
                        .IsUnique()
                        .HasDatabaseName("IX_estados_codigo_ibge");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Estados_DataCriacao");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_estados_nome");

                    b.HasIndex("Regiao")
                        .HasDatabaseName("IX_estados_regiao");

                    b.HasIndex("Uf")
                        .IsUnique()
                        .HasDatabaseName("IX_estados_uf");

                    b.ToTable("estados", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CepPrincipal")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep_principal");

                    b.Property<int>("CodigoIbge")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.Property<double?>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double?>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CepPrincipal")
                        .HasDatabaseName("IX_municipios_cep_principal");

                    b.HasIndex("CodigoIbge")
                        .IsUnique()
                        .HasDatabaseName("IX_municipios_codigo_ibge");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Municipios_DataCriacao");

                    b.HasIndex("EstadoId")
                        .HasDatabaseName("IX_municipios_estado_id");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_municipios_nome");

                    b.ToTable("municipios", "public");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Ativo");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("Cnpj");

                    b.Property<JsonDocument>("DadosAdicionais")
                        .HasColumnType("jsonb")
                        .HasColumnName("DadosAdicionais");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("Email");

                    b.Property<string>("Endereco")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Endereco");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("InscricaoEstadual");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("LogoUrl");

                    b.Property<int>("MoedaPadrao")
                        .HasColumnType("integer")
                        .HasColumnName("MoedaPadrao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome");

                    b.Property<decimal?>("PedidoMinimo")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("PedidoMinimo");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("Telefone");

                    b.Property<string>("TokenLincros")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TokenLincros");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_Fornecedor_Ativo");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasDatabaseName("IX_Fornecedor_Cnpj");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Fornecedor_DataCriacao");

                    b.HasIndex("Email")
                        .HasDatabaseName("IX_Fornecedor_Email")
                        .HasFilter("\"Email\" IS NOT NULL");

                    b.HasIndex("MoedaPadrao")
                        .HasDatabaseName("IX_Fornecedor_MoedaPadrao");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_Fornecedor_Nome");

                    b.ToTable("Fornecedor", "public");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.UsuarioFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataFim");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataInicio");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("FornecedorId");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("Role");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_UsuarioFornecedor_Ativo");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_UsuarioFornecedor_DataCriacao");

                    b.HasIndex("DataInicio")
                        .HasDatabaseName("IX_UsuarioFornecedor_DataInicio");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("IX_UsuarioFornecedor_FornecedorId");

                    b.HasIndex("Role")
                        .HasDatabaseName("IX_UsuarioFornecedor_Role");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("IX_UsuarioFornecedor_UsuarioId");

                    b.HasIndex("UsuarioId", "FornecedorId")
                        .IsUnique()
                        .HasDatabaseName("IX_UsuarioFornecedor_Usuario_Fornecedor");

                    b.ToTable("UsuarioFornecedor", "public");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.UsuarioFornecedorTerritorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<JsonDocument>("Estados")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Estados");

                    b.Property<JsonDocument>("Municipios")
                        .HasColumnType("jsonb")
                        .HasColumnName("Municipios");

                    b.Property<bool>("TerritorioPadrao")
                        .HasColumnType("boolean")
                        .HasColumnName("TerritorioPadrao");

                    b.Property<int>("UsuarioFornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioFornecedorId");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_UsuarioFornecedorTerritorio_Ativo");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_UsuarioFornecedorTerritorio_DataCriacao");

                    b.HasIndex("Estados")
                        .HasDatabaseName("IX_UsuarioFornecedorTerritorio_Estados_GIN");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Estados"), "gin");

                    b.HasIndex("Municipios")
                        .HasDatabaseName("IX_UsuarioFornecedorTerritorio_Municipios_GIN")
                        .HasFilter("\"Municipios\" IS NOT NULL");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Municipios"), "gin");

                    b.HasIndex("TerritorioPadrao")
                        .HasDatabaseName("IX_UsuarioFornecedorTerritorio_TerritorioPadrao");

                    b.HasIndex("UsuarioFornecedorId")
                        .HasDatabaseName("IX_UsuarioFornecedorTerritorio_UsuarioFornecedorId");

                    b.ToTable("UsuarioFornecedorTerritorio", "public");
                });

            modelBuilder.Entity("Agriis.Pagamentos.Dominio.Entidades.CulturaFormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<int>("CulturaId")
                        .HasColumnType("integer")
                        .HasColumnName("cultura_id");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("FormaPagamentoId")
                        .HasColumnType("integer")
                        .HasColumnName("forma_pagamento_id");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("fornecedor_id");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("ix_cultura_forma_pagamento_ativo");

                    b.HasIndex("CulturaId")
                        .HasDatabaseName("ix_cultura_forma_pagamento_cultura_id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_CulturaFormasPagamento_DataCriacao");

                    b.HasIndex("FormaPagamentoId")
                        .HasDatabaseName("ix_cultura_forma_pagamento_forma_pagamento_id");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("ix_cultura_forma_pagamento_fornecedor_id");

                    b.HasIndex("FornecedorId", "CulturaId", "FormaPagamentoId")
                        .IsUnique()
                        .HasDatabaseName("ix_cultura_forma_pagamento_unique");

                    b.ToTable("cultura_forma_pagamento", "public");
                });

            modelBuilder.Entity("Agriis.Pagamentos.Dominio.Entidades.FormaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("ix_forma_pagamento_ativo");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_FormasPagamento_DataCriacao");

                    b.HasIndex("Descricao")
                        .HasDatabaseName("ix_forma_pagamento_descricao");

                    b.ToTable("forma_pagamento", "public");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataLimiteInteracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataLimiteInteracao");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("FornecedorId");

                    b.Property<bool>("NegociarPedido")
                        .HasColumnType("boolean")
                        .HasColumnName("NegociarPedido");

                    b.Property<bool>("PermiteContato")
                        .HasColumnType("boolean")
                        .HasColumnName("PermiteContato");

                    b.Property<int>("ProdutorId")
                        .HasColumnType("integer")
                        .HasColumnName("ProdutorId");

                    b.Property<int>("QuantidadeItens")
                        .HasColumnType("integer")
                        .HasColumnName("QuantidadeItens");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<int>("StatusCarrinho")
                        .HasColumnType("integer")
                        .HasColumnName("StatusCarrinho");

                    b.Property<JsonDocument>("Totais")
                        .HasColumnType("jsonb")
                        .HasColumnName("Totais");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Pedidos_DataCriacao");

                    b.HasIndex("DataLimiteInteracao")
                        .HasDatabaseName("IX_Pedido_DataLimiteInteracao");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("IX_Pedido_FornecedorId");

                    b.HasIndex("ProdutorId")
                        .HasDatabaseName("IX_Pedido_ProdutorId");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Pedido_Status");

                    b.HasIndex("ProdutorId", "FornecedorId")
                        .HasDatabaseName("IX_Pedido_ProdutorId_FornecedorId");

                    b.ToTable("Pedido", "public");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.PedidoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<JsonDocument>("DadosAdicionais")
                        .HasColumnType("jsonb")
                        .HasColumnName("DadosAdicionais");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Observacoes");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("PedidoId");

                    b.Property<decimal>("PercentualDesconto")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("PercentualDesconto");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("PrecoUnitario");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer")
                        .HasColumnName("ProdutoId");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Quantidade");

                    b.Property<decimal>("ValorDesconto")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorDesconto");

                    b.Property<decimal>("ValorFinal")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorFinal");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_PedidoItens_DataCriacao");

                    b.HasIndex("PedidoId")
                        .HasDatabaseName("IX_PedidoItem_PedidoId");

                    b.HasIndex("ProdutoId")
                        .HasDatabaseName("IX_PedidoItem_ProdutoId");

                    b.HasIndex("ValorFinal")
                        .HasDatabaseName("IX_PedidoItem_ValorFinal");

                    b.ToTable("PedidoItem", "public");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.PedidoItemTransporte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAgendamento")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAgendamento");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("EnderecoDestino")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("EnderecoDestino");

                    b.Property<string>("EnderecoOrigem")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("EnderecoOrigem");

                    b.Property<JsonDocument>("InformacoesTransporte")
                        .HasColumnType("jsonb")
                        .HasColumnName("InformacoesTransporte");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Observacoes");

                    b.Property<int>("PedidoItemId")
                        .HasColumnType("integer")
                        .HasColumnName("PedidoItemId");

                    b.Property<int?>("PedidoItemId1")
                        .HasColumnType("integer");

                    b.Property<decimal?>("PesoTotal")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("PesoTotal");

                    b.Property<decimal>("Quantidade")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Quantidade");

                    b.Property<decimal>("ValorFrete")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("ValorFrete");

                    b.Property<decimal?>("VolumeTotal")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("VolumeTotal");

                    b.HasKey("Id");

                    b.HasIndex("DataAgendamento")
                        .HasDatabaseName("IX_PedidoItemTransporte_DataAgendamento");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_PedidoItensTransporte_DataCriacao");

                    b.HasIndex("PedidoItemId")
                        .HasDatabaseName("IX_PedidoItemTransporte_PedidoItemId");

                    b.HasIndex("PedidoItemId1");

                    b.HasIndex("ValorFrete")
                        .HasDatabaseName("IX_PedidoItemTransporte_ValorFrete");

                    b.ToTable("PedidoItemTransporte", "public");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.Proposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AcaoComprador")
                        .HasColumnType("integer")
                        .HasColumnName("AcaoComprador");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Observacao")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("Observacao");

                    b.Property<int>("PedidoId")
                        .HasColumnType("integer")
                        .HasColumnName("PedidoId");

                    b.Property<int?>("UsuarioFornecedorId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioFornecedorId");

                    b.Property<int?>("UsuarioProdutorId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioProdutorId");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Proposta_DataCriacao");

                    b.HasIndex("PedidoId")
                        .HasDatabaseName("IX_Proposta_PedidoId");

                    b.HasIndex("UsuarioFornecedorId")
                        .HasDatabaseName("IX_Proposta_UsuarioFornecedorId");

                    b.HasIndex("UsuarioProdutorId")
                        .HasDatabaseName("IX_Proposta_UsuarioProdutorId");

                    b.ToTable("Proposta", "public");
                });

            modelBuilder.Entity("Agriis.PontosDistribuicao.Dominio.Entidades.PontoDistribuicao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<decimal?>("CapacidadeMaxima")
                        .HasPrecision(18, 4)
                        .HasColumnType("numeric(18,4)");

                    b.Property<JsonDocument>("CoberturaTerritorios")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .UseCollation("pt_BR");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<JsonDocument>("HorarioFuncionamento")
                        .HasColumnType("jsonb");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .UseCollation("pt_BR");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(2000)
                        .HasColumnType("character varying(2000)")
                        .UseCollation("pt_BR");

                    b.Property<double?>("RaioCobertura")
                        .HasPrecision(10, 2)
                        .HasColumnType("double precision");

                    b.Property<string>("UnidadeCapacidade")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_PontoDistribuicao_Ativo");

                    b.HasIndex("CoberturaTerritorios")
                        .HasDatabaseName("IX_PontoDistribuicao_CoberturaTerritorios");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("CoberturaTerritorios"), "gin");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_PontosDistribuicao_DataCriacao");

                    b.HasIndex("EnderecoId")
                        .HasDatabaseName("IX_PontoDistribuicao_EnderecoId");

                    b.HasIndex("FornecedorId")
                        .HasDatabaseName("IX_PontoDistribuicao_FornecedorId");

                    b.HasIndex("FornecedorId", "Nome")
                        .IsUnique()
                        .HasDatabaseName("IX_PontoDistribuicao_FornecedorId_Nome");

                    b.ToTable("PontoDistribuicao", "public");
                });

            modelBuilder.Entity("Agriis.Produtores.Dominio.Entidades.Produtor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AreaPlantio")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("AreaPlantio");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(14)
                        .HasColumnType("character varying(14)")
                        .HasColumnName("Cnpj");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("Cpf");

                    b.Property<string>("Culturas")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("Culturas");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataAutorizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAutorizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("InscricaoEstadual");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome");

                    b.Property<JsonDocument>("RetornosApiCheckProdutor")
                        .HasColumnType("jsonb")
                        .HasColumnName("RetornosApiCheckProdutor");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("Status");

                    b.Property<string>("TipoAtividade")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TipoAtividade");

                    b.Property<int?>("UsuarioAutorizacaoId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioAutorizacaoId");

                    b.HasKey("Id");

                    b.HasIndex("AreaPlantio")
                        .HasDatabaseName("IX_Produtor_AreaPlantio");

                    b.HasIndex("Cnpj")
                        .IsUnique()
                        .HasDatabaseName("IX_Produtor_Cnpj")
                        .HasFilter("\"Cnpj\" IS NOT NULL");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasDatabaseName("IX_Produtor_Cpf")
                        .HasFilter("\"Cpf\" IS NOT NULL");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Produtor_DataCriacao");

                    b.HasIndex("Status")
                        .HasDatabaseName("IX_Produtor_Status");

                    b.HasIndex("UsuarioAutorizacaoId");

                    b.ToTable("Produtor", "public");
                });

            modelBuilder.Entity("Agriis.Produtores.Dominio.Entidades.UsuarioProdutor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("Ativo");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("EhProprietario")
                        .HasColumnType("boolean")
                        .HasColumnName("EhProprietario");

                    b.Property<int>("ProdutorId")
                        .HasColumnType("integer")
                        .HasColumnName("ProdutorId");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("IX_UsuarioProdutor_Ativo");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_UsuariosProdutores_DataCriacao");

                    b.HasIndex("EhProprietario")
                        .HasDatabaseName("IX_UsuarioProdutor_EhProprietario");

                    b.HasIndex("ProdutorId")
                        .HasDatabaseName("IX_UsuarioProdutor_ProdutorId");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("IX_UsuarioProdutor_UsuarioId");

                    b.HasIndex("UsuarioId", "ProdutorId")
                        .IsUnique()
                        .HasDatabaseName("IX_UsuarioProdutor_UsuarioId_ProdutorId");

                    b.ToTable("UsuarioProdutor", "public");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int?>("CategoriaPaiId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Ordem")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaPaiId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Categoria_DataCriacao");

                    b.ToTable("Categoria", "public");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<JsonDocument>("DadosAdicionais")
                        .HasColumnType("jsonb");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("integer");

                    b.Property<string>("Marca")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ObservacoesRestricao")
                        .HasColumnType("text");

                    b.Property<int?>("ProdutoPaiId")
                        .HasColumnType("integer");

                    b.Property<bool>("ProdutoRestrito")
                        .HasColumnType("boolean");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("Tipo")
                        .HasColumnType("integer");

                    b.Property<int>("TipoCalculoPeso")
                        .HasColumnType("integer");

                    b.Property<int>("Unidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Produto_DataCriacao");

                    b.HasIndex("ProdutoPaiId");

                    b.ToTable("Produto", "public");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.ProdutoCultura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("CulturaId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Observacoes")
                        .HasColumnType("text");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_ProdutoCultura_DataCriacao");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ProdutoCultura", "public");
                });

            modelBuilder.Entity("Agriis.Propriedades.Dominio.Entidades.Propriedade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AreaTotal")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("AreaTotal");

                    b.Property<JsonDocument>("DadosAdicionais")
                        .HasColumnType("jsonb")
                        .HasColumnName("DadosAdicionais");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("integer")
                        .HasColumnName("EnderecoId");

                    b.Property<string>("InscricaoEstadual")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("InscricaoEstadual");

                    b.Property<string>("Nirf")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("Nirf");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome");

                    b.Property<int>("ProdutorId")
                        .HasColumnType("integer")
                        .HasColumnName("ProdutorId");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Propriedades_DataCriacao");

                    b.HasIndex("EnderecoId")
                        .HasDatabaseName("IX_Propriedade_EnderecoId");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_Propriedade_Nome");

                    b.HasIndex("ProdutorId")
                        .HasDatabaseName("IX_Propriedade_ProdutorId");

                    b.ToTable("Propriedade", "public");
                });

            modelBuilder.Entity("Agriis.Propriedades.Dominio.Entidades.PropriedadeCultura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Area");

                    b.Property<int>("CulturaId")
                        .HasColumnType("integer")
                        .HasColumnName("CulturaId");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime?>("DataColheitaPrevista")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataColheitaPrevista");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataPlantio")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataPlantio");

                    b.Property<string>("Observacoes")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("Observacoes");

                    b.Property<int>("PropriedadeId")
                        .HasColumnType("integer")
                        .HasColumnName("PropriedadeId");

                    b.Property<int?>("SafraId")
                        .HasColumnType("integer")
                        .HasColumnName("SafraId");

                    b.HasKey("Id");

                    b.HasIndex("CulturaId")
                        .HasDatabaseName("IX_PropriedadeCultura_CulturaId");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_PropriedadeCulturas_DataCriacao");

                    b.HasIndex("PropriedadeId")
                        .HasDatabaseName("IX_PropriedadeCultura_PropriedadeId");

                    b.HasIndex("SafraId")
                        .HasDatabaseName("IX_PropriedadeCultura_SafraId");

                    b.HasIndex("DataPlantio", "DataColheitaPrevista")
                        .HasDatabaseName("IX_PropriedadeCultura_PeriodoPlantio");

                    b.HasIndex("PropriedadeId", "CulturaId")
                        .IsUnique()
                        .HasDatabaseName("IX_PropriedadeCultura_PropriedadeId_CulturaId");

                    b.ToTable("PropriedadeCultura", "public");
                });

            modelBuilder.Entity("Agriis.Propriedades.Dominio.Entidades.Talhao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("Area");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("Descricao");

                    b.Property<Polygon>("Geometria")
                        .HasColumnType("geography(POLYGON, 4326)")
                        .HasColumnName("Geometria");

                    b.Property<Point>("Localizacao")
                        .HasColumnType("geography(POINT, 4326)")
                        .HasColumnName("Localizacao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("Nome");

                    b.Property<int>("PropriedadeId")
                        .HasColumnType("integer")
                        .HasColumnName("PropriedadeId");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Talhoes_DataCriacao");

                    b.HasIndex("Geometria")
                        .HasDatabaseName("IX_Talhao_Geometria");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Geometria"), "gist");

                    b.HasIndex("Localizacao")
                        .HasDatabaseName("IX_Talhao_Localizacao");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Localizacao"), "gist");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_Talhao_Nome");

                    b.HasIndex("PropriedadeId")
                        .HasDatabaseName("IX_Talhao_PropriedadeId");

                    b.ToTable("Talhao", "public");
                });

            modelBuilder.Entity("Agriis.Safras.Dominio.Entidades.Safra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("Id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoColheita")
                        .HasColumnType("integer")
                        .HasColumnName("AnoColheita");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataAtualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("DataCriacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnName("Descricao");

                    b.Property<DateTime>("PlantioFinal")
                        .HasColumnType("date")
                        .HasColumnName("PlantioFinal");

                    b.Property<DateTime>("PlantioInicial")
                        .HasColumnType("date")
                        .HasColumnName("PlantioInicial");

                    b.Property<string>("PlantioNome")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("PlantioNome");

                    b.HasKey("Id");

                    b.HasIndex("AnoColheita")
                        .HasDatabaseName("IX_Safra_AnoColheita");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Safras_DataCriacao");

                    b.HasIndex("PlantioFinal")
                        .HasDatabaseName("IX_Safra_PlantioFinal");

                    b.HasIndex("PlantioInicial")
                        .HasDatabaseName("IX_Safra_PlantioInicial");

                    b.HasIndex("PlantioNome", "PlantioInicial", "PlantioFinal")
                        .IsUnique()
                        .HasDatabaseName("IX_Safra_Atual")
                        .HasFilter("PlantioNome = 'S1'");

                    b.ToTable("Safra", "public");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("logo_url");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("SenhaHash")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha_hash");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultimo_login");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("ix_usuarios_ativo");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasDatabaseName("ix_usuarios_cpf")
                        .HasFilter("cpf IS NOT NULL");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Usuarios_DataCriacao");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_usuarios_email");

                    b.ToTable("usuarios", "public");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.UsuarioRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atribuicao");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_UsuarioRoles_DataCriacao");

                    b.HasIndex("Role")
                        .HasDatabaseName("ix_usuario_roles_role");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_usuario_roles_usuario_id");

                    b.HasIndex("UsuarioId", "Role")
                        .IsUnique()
                        .HasDatabaseName("ix_usuario_roles_usuario_role_unique");

                    b.ToTable("usuario_roles", "public");
                });

            modelBuilder.Entity("Agriis.Catalogos.Dominio.Entidades.CatalogoItem", b =>
                {
                    b.HasOne("Agriis.Catalogos.Dominio.Entidades.Catalogo", "Catalogo")
                        .WithMany("Itens")
                        .HasForeignKey("CatalogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catalogo");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.ComboCategoriaDesconto", b =>
                {
                    b.HasOne("Agriis.Combos.Dominio.Entidades.Combo", "Combo")
                        .WithMany("CategoriasDesconto")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.ComboItem", b =>
                {
                    b.HasOne("Agriis.Combos.Dominio.Entidades.Combo", "Combo")
                        .WithMany("Itens")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.ComboLocalRecebimento", b =>
                {
                    b.HasOne("Agriis.Combos.Dominio.Entidades.Combo", "Combo")
                        .WithMany("LocaisRecebimento")
                        .HasForeignKey("ComboId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Combo");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Endereco", b =>
                {
                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Estado", "Estado")
                        .WithMany("Enderecos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Municipio", "Municipio")
                        .WithMany("Enderecos")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Municipio", b =>
                {
                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Estado", "Estado")
                        .WithMany("Municipios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.UsuarioFornecedor", b =>
                {
                    b.HasOne("Agriis.Fornecedores.Dominio.Entidades.Fornecedor", "Fornecedor")
                        .WithMany("UsuariosFornecedores")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agriis.Usuarios.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.UsuarioFornecedorTerritorio", b =>
                {
                    b.HasOne("Agriis.Fornecedores.Dominio.Entidades.UsuarioFornecedor", "UsuarioFornecedor")
                        .WithMany("Territorios")
                        .HasForeignKey("UsuarioFornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioFornecedor");
                });

            modelBuilder.Entity("Agriis.Pagamentos.Dominio.Entidades.CulturaFormaPagamento", b =>
                {
                    b.HasOne("Agriis.Pagamentos.Dominio.Entidades.FormaPagamento", "FormaPagamento")
                        .WithMany("CulturaFormasPagamento")
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("FormaPagamento");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.PedidoItem", b =>
                {
                    b.HasOne("Agriis.Pedidos.Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agriis.Produtos.Dominio.Entidades.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.PedidoItemTransporte", b =>
                {
                    b.HasOne("Agriis.Pedidos.Dominio.Entidades.PedidoItem", "PedidoItem")
                        .WithMany("ItensTransporte")
                        .HasForeignKey("PedidoItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agriis.Pedidos.Dominio.Entidades.PedidoItem", null)
                        .WithMany("Transportes")
                        .HasForeignKey("PedidoItemId1");

                    b.Navigation("PedidoItem");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.Proposta", b =>
                {
                    b.HasOne("Agriis.Pedidos.Dominio.Entidades.Pedido", "Pedido")
                        .WithMany("Propostas")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("Agriis.PontosDistribuicao.Dominio.Entidades.PontoDistribuicao", b =>
                {
                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Agriis.Produtores.Dominio.Entidades.Produtor", b =>
                {
                    b.HasOne("Agriis.Usuarios.Dominio.Entidades.Usuario", "UsuarioAutorizacao")
                        .WithMany()
                        .HasForeignKey("UsuarioAutorizacaoId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("UsuarioAutorizacao");
                });

            modelBuilder.Entity("Agriis.Produtores.Dominio.Entidades.UsuarioProdutor", b =>
                {
                    b.HasOne("Agriis.Produtores.Dominio.Entidades.Produtor", "Produtor")
                        .WithMany("UsuariosProdutores")
                        .HasForeignKey("ProdutorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agriis.Usuarios.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produtor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.Categoria", b =>
                {
                    b.HasOne("Agriis.Produtos.Dominio.Entidades.Categoria", "CategoriaPai")
                        .WithMany("SubCategorias")
                        .HasForeignKey("CategoriaPaiId");

                    b.Navigation("CategoriaPai");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.Produto", b =>
                {
                    b.HasOne("Agriis.Produtos.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Agriis.Produtos.Dominio.Entidades.Produto", "ProdutoPai")
                        .WithMany("ProdutosFilhos")
                        .HasForeignKey("ProdutoPaiId");

                    b.Navigation("Categoria");

                    b.Navigation("ProdutoPai");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.ProdutoCultura", b =>
                {
                    b.HasOne("Agriis.Produtos.Dominio.Entidades.Produto", "Produto")
                        .WithMany("ProdutosCulturas")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("Agriis.Propriedades.Dominio.Entidades.PropriedadeCultura", b =>
                {
                    b.HasOne("Agriis.Propriedades.Dominio.Entidades.Propriedade", "Propriedade")
                        .WithMany("PropriedadeCulturas")
                        .HasForeignKey("PropriedadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propriedade");
                });

            modelBuilder.Entity("Agriis.Propriedades.Dominio.Entidades.Talhao", b =>
                {
                    b.HasOne("Agriis.Propriedades.Dominio.Entidades.Propriedade", "Propriedade")
                        .WithMany("Talhoes")
                        .HasForeignKey("PropriedadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propriedade");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.UsuarioRole", b =>
                {
                    b.HasOne("Agriis.Usuarios.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Agriis.Catalogos.Dominio.Entidades.Catalogo", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("Agriis.Combos.Dominio.Entidades.Combo", b =>
                {
                    b.Navigation("CategoriasDesconto");

                    b.Navigation("Itens");

                    b.Navigation("LocaisRecebimento");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Estado", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Municipio", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.Fornecedor", b =>
                {
                    b.Navigation("UsuariosFornecedores");
                });

            modelBuilder.Entity("Agriis.Fornecedores.Dominio.Entidades.UsuarioFornecedor", b =>
                {
                    b.Navigation("Territorios");
                });

            modelBuilder.Entity("Agriis.Pagamentos.Dominio.Entidades.FormaPagamento", b =>
                {
                    b.Navigation("CulturaFormasPagamento");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.Pedido", b =>
                {
                    b.Navigation("Itens");

                    b.Navigation("Propostas");
                });

            modelBuilder.Entity("Agriis.Pedidos.Dominio.Entidades.PedidoItem", b =>
                {
                    b.Navigation("ItensTransporte");

                    b.Navigation("Transportes");
                });

            modelBuilder.Entity("Agriis.Produtores.Dominio.Entidades.Produtor", b =>
                {
                    b.Navigation("UsuariosProdutores");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.Categoria", b =>
                {
                    b.Navigation("Produtos");

                    b.Navigation("SubCategorias");
                });

            modelBuilder.Entity("Agriis.Produtos.Dominio.Entidades.Produto", b =>
                {
                    b.Navigation("ProdutosCulturas");

                    b.Navigation("ProdutosFilhos");
                });

            modelBuilder.Entity("Agriis.Propriedades.Dominio.Entidades.Propriedade", b =>
                {
                    b.Navigation("PropriedadeCulturas");

                    b.Navigation("Talhoes");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
