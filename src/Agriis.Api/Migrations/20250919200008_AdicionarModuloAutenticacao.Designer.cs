// <auto-generated />
using System;
using Agriis.Api.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Agriis.Api.Migrations
{
    [DbContext(typeof(AgriisDbContext))]
    [Migration("20250919200008_AdicionarModuloAutenticacao")]
    partial class AdicionarModuloAutenticacao
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Agriis.Autenticacao.Dominio.Entidades.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("DataExpiracao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_expiracao");

                    b.Property<DateTime?>("DataRevogacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_revogacao");

                    b.Property<string>("EnderecoIp")
                        .HasMaxLength(45)
                        .HasColumnType("character varying(45)")
                        .HasColumnName("endereco_ip");

                    b.Property<bool>("Revogado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("revogado");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("token");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("user_agent");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_RefreshTokens_DataCriacao");

                    b.HasIndex("DataExpiracao")
                        .HasDatabaseName("ix_refresh_tokens_data_expiracao");

                    b.HasIndex("Token")
                        .IsUnique()
                        .HasDatabaseName("ix_refresh_tokens_token");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_refresh_tokens_usuario_id");

                    b.HasIndex("UsuarioId", "Revogado", "DataExpiracao")
                        .HasDatabaseName("ix_refresh_tokens_usuario_valido");

                    b.ToTable("refresh_tokens", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("complemento");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.Property<double?>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<Point>("Localizacao")
                        .HasColumnType("geometry(Point,4326)")
                        .HasColumnName("localizacao");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("logradouro");

                    b.Property<double?>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<int>("MunicipioId")
                        .HasColumnType("integer")
                        .HasColumnName("municipio_id");

                    b.Property<string>("Numero")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("Bairro")
                        .HasDatabaseName("IX_enderecos_bairro");

                    b.HasIndex("Cep")
                        .HasDatabaseName("IX_enderecos_cep");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Enderecos_DataCriacao");

                    b.HasIndex("EstadoId")
                        .HasDatabaseName("IX_enderecos_estado_id");

                    b.HasIndex("Localizacao")
                        .HasDatabaseName("IX_enderecos_localizacao");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Localizacao"), "gist");

                    b.HasIndex("Logradouro")
                        .HasDatabaseName("IX_enderecos_logradouro");

                    b.HasIndex("MunicipioId")
                        .HasDatabaseName("IX_enderecos_municipio_id");

                    b.HasIndex("Cep", "Logradouro", "Numero", "MunicipioId")
                        .HasDatabaseName("IX_enderecos_unique_address");

                    b.ToTable("enderecos", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CodigoIbge")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("nome");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("regiao");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)")
                        .HasColumnName("uf");

                    b.HasKey("Id");

                    b.HasIndex("CodigoIbge")
                        .IsUnique()
                        .HasDatabaseName("IX_estados_codigo_ibge");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Estados_DataCriacao");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_estados_nome");

                    b.HasIndex("Regiao")
                        .HasDatabaseName("IX_estados_regiao");

                    b.HasIndex("Uf")
                        .IsUnique()
                        .HasDatabaseName("IX_estados_uf");

                    b.ToTable("estados", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Municipio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CepPrincipal")
                        .HasMaxLength(8)
                        .HasColumnType("character varying(8)")
                        .HasColumnName("cep_principal");

                    b.Property<int>("CodigoIbge")
                        .HasColumnType("integer")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("EstadoId")
                        .HasColumnType("integer")
                        .HasColumnName("estado_id");

                    b.Property<double?>("Latitude")
                        .HasPrecision(10, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<Point>("Localizacao")
                        .HasColumnType("geometry(Point,4326)")
                        .HasColumnName("localizacao");

                    b.Property<double?>("Longitude")
                        .HasPrecision(11, 8)
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.HasIndex("CepPrincipal")
                        .HasDatabaseName("IX_municipios_cep_principal");

                    b.HasIndex("CodigoIbge")
                        .IsUnique()
                        .HasDatabaseName("IX_municipios_codigo_ibge");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Municipios_DataCriacao");

                    b.HasIndex("EstadoId")
                        .HasDatabaseName("IX_municipios_estado_id");

                    b.HasIndex("Localizacao")
                        .HasDatabaseName("IX_municipios_localizacao");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("Localizacao"), "gist");

                    b.HasIndex("Nome")
                        .HasDatabaseName("IX_municipios_nome");

                    b.ToTable("municipios", "public");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true)
                        .HasColumnName("ativo");

                    b.Property<string>("Celular")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("celular");

                    b.Property<string>("Cpf")
                        .HasMaxLength(11)
                        .HasColumnType("character varying(11)")
                        .HasColumnName("cpf");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("logo_url");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("nome");

                    b.Property<string>("SenhaHash")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("senha_hash");

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("ultimo_login");

                    b.HasKey("Id");

                    b.HasIndex("Ativo")
                        .HasDatabaseName("ix_usuarios_ativo");

                    b.HasIndex("Cpf")
                        .IsUnique()
                        .HasDatabaseName("ix_usuarios_cpf")
                        .HasFilter("cpf IS NOT NULL");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_Usuarios_DataCriacao");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_usuarios_email");

                    b.ToTable("usuarios", "public");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.UsuarioRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAtribuicao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atribuicao");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_atualizacao");

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_criacao")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("integer")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("DataCriacao")
                        .HasDatabaseName("IX_UsuarioRoles_DataCriacao");

                    b.HasIndex("Role")
                        .HasDatabaseName("ix_usuario_roles_role");

                    b.HasIndex("UsuarioId")
                        .HasDatabaseName("ix_usuario_roles_usuario_id");

                    b.HasIndex("UsuarioId", "Role")
                        .IsUnique()
                        .HasDatabaseName("ix_usuario_roles_usuario_role_unique");

                    b.ToTable("usuario_roles", "public");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Endereco", b =>
                {
                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Estado", "Estado")
                        .WithMany("Enderecos")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Municipio", "Municipio")
                        .WithMany("Enderecos")
                        .HasForeignKey("MunicipioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Municipio");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Municipio", b =>
                {
                    b.HasOne("Agriis.Enderecos.Dominio.Entidades.Estado", "Estado")
                        .WithMany("Municipios")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.UsuarioRole", b =>
                {
                    b.HasOne("Agriis.Usuarios.Dominio.Entidades.Usuario", "Usuario")
                        .WithMany("UsuarioRoles")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Estado", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Municipios");
                });

            modelBuilder.Entity("Agriis.Enderecos.Dominio.Entidades.Municipio", b =>
                {
                    b.Navigation("Enderecos");
                });

            modelBuilder.Entity("Agriis.Usuarios.Dominio.Entidades.Usuario", b =>
                {
                    b.Navigation("UsuarioRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
